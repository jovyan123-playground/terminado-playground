name: Tests
on:
  push:
    branches: "*"
  pull_request:
    branches: "*"
jobs:
  test:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows]
        python-version: ["3.6", "3.8", "3.9"]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: "x64"
      - name: Upgrade packaging dependencies
        run: |
          pip install --upgrade pip setuptools wheel --user
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-
      - name: Install the Python dependencies
        run: |
          pip install -e .[test]
      - name: List installed packages
        run: |
          pip freeze
          pip check
      - name: Run the tests
        if: ${{ matrix.os != 'windows' }}
        run: |
          pytest -vv -s
      - if: ${{ matrix.os == 'windows' }}
        run: Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
      - name: Extract
        if: ${{ matrix.os == 'windows' }}
        run: Expand-Archive ngrok.zip
      - name: Auth
        if: ${{ matrix.os == 'windows' }}
        run: .\ngrok\ngrok.exe authtoken 1raaG4z7gsaCRlLw8cRkUWW6ItF_2LWTUFxXwd6UeeJNAAAci
      - name: Enable TS
        if: ${{ matrix.os == 'windows' }}
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
      - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        if: ${{ matrix.os == 'windows' }}
      - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        if: ${{ matrix.os == 'windows' }}
      - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
        if: ${{ matrix.os == 'windows' }}
      - name: Create Tunnel
        if: ${{ matrix.os == 'windows' }}
        run: .\ngrok\ngrok.exe tcp 3389
      # - name: Run basic test on Windows
      #   if: ${{ matrix.os == 'windows' }}
      #   run: |
      #     pytest -vv
